Proje Detayları
Merhabalar,

Projenin son teslim tarihi 1 Haziran 2016'dır. Projeden alacağınız notun henüz belirlenmemiş bir yüzdesi final notunuza doğrudan eklenecektir. Her türlü sorunuz için benimle okulda görüşebilir veya "mertkanalacahan@gmail.com" adresine mail atabilirsiniz.

Proje teslimi bu gönderi üzerinden yapılacaktır. Proje teslimini herkes tekli şekilde yapacak, grup halinde teslim kabul edilmeyecektir. İnternet aracılığıyla veya kendi aranızda bilgi alışverişinde bulunmanızda bir sakınca yoktur, ancak bire bir kopya tespiti durumunda iki taraf da (internet üzerinden kopya durumunda tek taraf) sıfır alacaktır. Değişken isimleri değiştirmeniz, for döngüsünü while şeklinde yazmanız gibi girişimler işe yaramayacaktır; zira bu benzerlikleri tespit edebilen yazılımlar mevcuttur. Son olarak projeden not alabilmek için projenizi tamamladıktan sonra kodunuzu, karşılaştığınız problemleri ve bunları nasıl çözdüğünüzü bana kısaca anlatmanız gerekecek. Bunu yapmadığınız takdirde kodunuz hatasız çalışsa bile not alamayacaksınız. Beni donanım laboratuvarında bulabilirsiniz.

Projenin tamamlanmış örnek bir .exe dosyasını ekte bulabilirsiniz. Detaylar:

Konsol üzerinden çalışan bir quiz uygulaması geliştireceksiniz. Form kullanan projeler kabul edilmeyecektir. En az 10-20 arası sayıda (isteğe bağlı olarak daha fazla) sorudan oluşan bir soru havuzunuz olacak. Bunu gerçekleştirmek için Soru isminde bir sınıf oluşturmanızı tavsiye ediyorum. Bu sınıf içerisinde soru metnini(string), sorunun cevap şıklarını(string dizisi), ve sorunun doğru cevabının, cevap şıkkı dizisinin kaçıncı elemanında olduğunu tutan bir değişkeni(int) bulundurmanız faydalı olur. Soru sınıfına bir örnek:

class Soru{
public string soruMetni;
public string[] cevaplar;
public int dogruCevap;

public Soru(){
cevaplar = new string[4];
}
}

Soru havuzunuz "Soru" tipinde, soru havuzunuz kaç sorudan oluşacaksa o kadar boyutta bir diziden ibaret olacak. Main metodunun ilk satırlarında bu diziyi oluşturmanız size kolaylık sağlayacaktır (10 sayısı örnektir, daha fazla soru olabilir):

Soru[] sorular = new Soru[10];

for (int i = 0; i < 10; i++)
sorular[i] = new Soru();

Bu aşamadan sonra soru metinlerini, cevap şıklarını ve doğru şıkkın kaçıncı elemanda tutulduğunu doldurma kısmı size kalmıştır. Bu iki kod parçası tamamen tavsiye niteliğindedir; projenizin temeli için daha farklı çözüm yöntemleri kullanmakta tamamen serbestsiniz. Uygulamada öncelikle kullanıcıya quizin kaç sorudan oluşacağını ve her sorunun kaç puan (0-100) olacağını sorunuz. Girilen soru sayısı değerinin soru havuzu boyutunuzu aşmadığına ve negatif bir sayı olmadığına, puan değerinin de 0 ile 100 arasında olduğuna emin olunuz (Girilen değerin karakter mi sayı mı olduğunu kontrol etmenize gerek yoktur, sayı girildiğini varsayınız). Bunu sağlamak için havuzunuzun kaç soru içerdiğini kullanıcıya bildirmeniz faydalı olacaktır. Alınan veriler doğrultusunda istenilen sayıda soruyu kullanıcıya sıra ile sormanız beklenmektedir. Burada önemli olan nokta, uygulamayı her çalıştırdığınızda soruların RASTGELE bir şekilde sorulması gerekmektedir. İlk çalıştırmada 10 soru sorulmasını istedikten sonra uygulamayı tekrar çalıştırdığımda ve tekrar 10 soru sorulmasını istediğimde, sorulan sorular AYNI SIRADA OLMAMALIDIR.

Kullanıcının sorulara A,B,C veya D şeklinde cevap vereceğini varsayınız. Bu dört cevaptan herhangi başka bir cevap girildiğinde kullanıcıyı uyarıp tekrar cevap vermesini isteyiniz. Doğru cevap verildiği takdirde kullanıcıyı tebrik edip bir sonraki soruya geçebilirsiniz. Yanlış cevap durumunda cevabın yanlış olduğunu kullanıcıya bildirip, doğru cevabın ne olduğunu da (sadece hangi şık olduğu değil, cevabın içeriğini de) ekrana yazdırıp bir sonraki soruya geçiniz. Quiz sonunda alınan puanı, doğru ve yanlış cevap sayılarını ekrana yazdırmanız ve programı sonlandırmanız gerekir.

Derslerinizde başarılar dilerim, kolay gelsin.
